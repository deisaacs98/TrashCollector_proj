@model IEnumerable<TrashCollector.Models.Customer>

@{
    ViewData["Title"] = "Index";
    Layout = "_EmployeeLayout";
}

<script>
    @foreach (var item in Model) { item.Address = item.Street + " " + item.City + ", " + item.State + ", " + item.ZipCode; }
    function initMap() {
        const geocoder = new google.maps.Geocoder();
        const map = new google.maps.Map({
            zoom: 8,
        });


    }

    function geocodeAddress(geocoder, resultsMap) {
        geocoder.geocode({ address: item.Address }, (results, status) => {
            if (status === "OK") {
                resultsMap.setCenter(results[0].geometry.location);
                new google.maps.Marker({
                    map: resultsMap,
                    position: results[0].geometry.location,
                });
            } else {
                alert(
                    "Geocode was not successful for the following reason: " + status
                );
            }
        });
    }
</script>

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<div id="map"></div>




<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ZipCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdentityUser)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ZipCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdentityUser.Id)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    <a asp-action="CheckPickups" asp-route-id="@item.Id,0">Sunday</a>
                    <a asp-action="CheckPickups" asp-route-id="@item.Id,1">Monday</a>
                    <a asp-action="CheckPickups" asp-route-id="@item.Id,2">Tuesday</a>
                    <a asp-action="CheckPickups" asp-route-id="@item.Id,3">Wednesday</a>
                    <a asp-action="CheckPickups" asp-route-id="@item.Id,4">Thursday</a>
                    <a asp-action="CheckPickups" asp-route-id="@item.Id,5">Friday</a>
                    <a asp-action="CheckPickups" asp-route-id="@item.Id,6">Saturday</a>|
                </td>
            </tr>
        }
    </tbody>
</table>

