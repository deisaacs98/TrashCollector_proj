@model IEnumerable<TrashCollector.Models.Customer>

@{
    ViewData["Title"] = "CheckPickups";
    Layout = "~/Views/Shared/_EmployeeLayout.cshtml";
}
<div id="map"></div>
<script>
    function initMap() {
        const geocoder = new google.maps.Geocoder();
        const map = new google.maps.Map();
    }
    @foreach (var item in Model) { item.Address = item.Street + " " + item.City + ", " + item.State + ", " + item.ZipCode; }
    
    function geocodeAddress(geocoder, resultsMap) {
        geocoder.geocode({ address: item.Address }, (results, status) => {
            if (status === "OK") {
                resultsMap.setCenter(results[0].geometry.location);
                new google.maps.Marker({
                    map: resultsMap,
                    position: results[0].geometry.location,
                });
            } else {
                alert(
                    "Geocode was not successful for the following reason: " + status
                );
            }
        });
    }
</script>
<h1>Today's Pickups</h1>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ZipCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CompletedPickups)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RegularPickupDay)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SuspendStartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SuspendEndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OneTimePickupDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdentityUser)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {

        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ZipCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CompletedPickups)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RegularPickupDay)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SuspendStartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SuspendEndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OneTimePickupDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdentityUser.Id)
            </td>
            <td>
                <a asp-action="ConfirmPickup" asp-route-id="@item.Id">Confirm Pickup</a>
            </td>
        </tr>
}
    </tbody>
</table>
